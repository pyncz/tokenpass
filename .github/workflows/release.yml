name: Release tag

on:
  push:
    tags:
      - v*

jobs:
  notify_start:
    name: Notify about start releasing
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}

      - name: Send telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ðŸš€ Creating release for ${{ github.repository }}@${{ steps.get_version.outputs.version }}...

  publish:
    name: Publish image on Docker Hub
    runs-on: ubuntu-latest
    needs: notify_start
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      # Smoke test version
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Fetch required Go modules
        run:  go mod download

      - name: Build
        run:  go build -v ./...

      # Build flow
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Log image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  changelog:
    name: Create GitHub Release with Changelog
    runs-on: ubuntu-latest
    needs: notify_start
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/

      - name: Install releaser
        run: yarn global add conventional-github-releaser

      - name: GitHub Release
        run: npx conventional-github-releaser -p angular
        continue-on-error: true
        env:
          CONVENTIONAL_GITHUB_RELEASER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  notify_end:
    name: Notify about finish releasing
    runs-on: ubuntu-latest
    needs:
      - publish
      - changelog
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}

      - name: Send telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            âœ¨ Release for ${{ github.repository }}@${{ steps.get_version.outputs.version }} has been created!
